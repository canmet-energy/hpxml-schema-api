[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hpxml-schema-api"
description = "HPXML Schema API - Programmatic access to HPXML schema metadata, validation, and form generation"
readme = "README.md"
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "CANMET Energy", email = "canmet-energy@nrcan-rncan.gc.ca"}
]
keywords = ["hpxml", "schema", "api", "validation", "building", "energy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
requires-python = ">=3.10"
version = "0.3.0"
dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "httpx>=0.27.0",
    "lxml>=4.9.0",
    "python-dateutil>=2.8.0",
    "redis>=4.5.0",
    "strawberry-graphql[fastapi]>=0.220.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-xdist>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.27.0",
    "fakeredis>=2.20.0",
]
mcp = [
    "mcp>=1.0.0",
    "psutil>=5.9.0",
]

[project.urls]
Homepage = "https://github.com/canmet-energy/hpxml-schema-api"
Repository = "https://github.com/canmet-energy/hpxml-schema-api"
Documentation = "https://github.com/canmet-energy/hpxml-schema-api/blob/main/README.md"
Issues = "https://github.com/canmet-energy/hpxml-schema-api/issues"

[project.scripts]
hpxml-schema-api = "hpxml_schema_api.run_server:main"
hpxml-mcp-server = "hpxml_schema_api.mcp_server:main"
hpxml-schema = "hpxml_schema_api.schema_cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"hpxml_schema_api.schema" = ["*.xsd", "*.xml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]  # Use of assert detected

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
